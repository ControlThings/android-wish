/**
 * Copyright (C) 2020, ControlThings Oy Ab
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * @license Apache-2.0
 */
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class fi_ct_wish_os_WishOsJni */

#ifndef _Included_fi_ct_wish_os_WishOsJni
#define _Included_fi_ct_wish_os_WishOsJni
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     fi_ct_wish_os_WishOsJni
 * Method:    register
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_fi_ct_wish_os_WishOsJni_register
  (JNIEnv *, jobject, jint);

/*
 * Class:     fi_ct_wish_os_WishOsJni
 * Method:    unRegister
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_fi_ct_wish_os_WishOsJni_unRegister
  (JNIEnv *, jobject);

/*
 * Class:     fi_ct_wish_os_WishOsJni
 * Method:    getRxBufferFree
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_fi_ct_wish_os_WishOsJni_getRxBufferFree
  (JNIEnv *, jobject, jint);

/*
 * Class:     fi_ct_wish_os_WishOsJni
 * Method:    isRingbufferEmpty
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_fi_ct_wish_os_WishOsJni_isRingbufferEmpty
  (JNIEnv *, jobject, jint);

/*
 * Class:     fi_ct_wish_os_WishOsJni
 * Method:    feedData
 * Signature: (I[BI)V
 */
JNIEXPORT void JNICALL Java_fi_ct_wish_os_WishOsJni_feedData
  (JNIEnv *, jobject, jint, jbyteArray, jint);

/*
 * Class:     fi_ct_wish_os_WishOsJni
 * Method:    signalEvent
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_fi_ct_wish_os_WishOsJni_signalEvent
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     fi_ct_wish_os_WishOsJni
 * Method:    reportPeriodic
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_fi_ct_wish_os_WishOsJni_reportPeriodic
  (JNIEnv *, jobject);

/*
 * Class:     fi_ct_wish_os_WishOsJni
 * Method:    processConnections
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_fi_ct_wish_os_WishOsJni_processConnections
  (JNIEnv *, jobject);

/*
 * Class:     fi_ct_wish_os_WishOsJni
 * Method:    feedLocalDiscoveryData
 * Signature: ([BI[B)V
 */
JNIEXPORT void JNICALL Java_fi_ct_wish_os_WishOsJni_feedLocalDiscoveryData
  (JNIEnv *, jobject, jbyteArray, jint, jbyteArray);

/*
 * Class:     fi_ct_wish_os_WishOsJni
 * Method:    acceptServerConnection
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_fi_ct_wish_os_WishOsJni_acceptServerConnection
  (JNIEnv *, jobject);

/*
 * Class:     fi_ct_wish_os_WishOsJni
 * Method:    relayControlSignalEvent
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_fi_ct_wish_os_WishOsJni_relayControlSignalEvent
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     fi_ct_wish_os_WishOsJni
 * Method:    relayControlFeed
 * Signature: (I[B)V
 */
JNIEXPORT void JNICALL Java_fi_ct_wish_os_WishOsJni_relayControlFeed
  (JNIEnv *, jobject, jint, jbyteArray);

/*
 * Class:     fi_ct_wish_os_WishOsJni
 * Method:    dnsResolvingCompleted
 * Signature: (I[BI)V
 */
JNIEXPORT void JNICALL Java_fi_ct_wish_os_WishOsJni_dnsResolvingCompleted
  (JNIEnv *, jobject, jint, jbyteArray, jint);

#ifdef __cplusplus
}
#endif
#endif
